{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bulei\\\\Desktop\\\\full stack course\\\\Jamming\\\\jammming\\\\src\\\\components\\\\App\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './App.module.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport Tracklist from '../Tracklist/Tracklist';\nimport Spotify from '../Spotify/spotify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [selectedTracks, setSelectedTracks] = useState([]);\n  const [tracks, setTracks] = useState([]);\n  const [playlistName, setPlaylistName] = useState('My New Playlist');\n  const [playlistTracks, setPlaylistTracks] = useState([{\n    name: \"Song 1\",\n    uri: \"spotify:track:123\"\n  }, {\n    name: \"Song 2\",\n    uri: \"spotify:track:456\"\n  }, {\n    name: \"Song 3\",\n    uri: \"spotify:track:789\"\n  }]);\n  const savePlaylist = async () => {\n    if (!selectedTracks.length) {\n      console.error(\"❌ No tracks in the playlist to save!\");\n      return;\n    }\n    console.log(\"🚀 Saving playlist:\", playlistName, selectedTracks);\n    const trackUris = selectedTracks.map(track => track.uri);\n    try {\n      await Spotify.savePlaylist(playlistName, trackUris);\n      setSelectedTracks([]);\n      alert(\"✅ Playlist saved successfully!\");\n    } catch (error) {\n      console.error(\"❌ Error saving playlist:\", error);\n    }\n  };\n  const handleSelectTrack = track => {\n    setSelectedTracks(prevSelected => {\n      const isSelected = prevSelected.some(t => t.id === track.id);\n      if (isSelected) {\n        return prevSelected.filter(t => t.id !== track.id);\n      } else {\n        return [...prevSelected, track];\n      }\n    });\n  };\n  const handleSearch = async query => {\n    const searchResults = await Spotify.searchTracks(query);\n    setTracks(searchResults);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Jammming\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Main,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.SearchResults,\n        children: /*#__PURE__*/_jsxDEV(SearchResults, {\n          tracks: tracks,\n          onSelectTrack: handleSelectTrack,\n          selectedTracks: selectedTracks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Playlist,\n        children: /*#__PURE__*/_jsxDEV(Playlist, {\n          selectedTracks: selectedTracks,\n          playlistTracks: playlistTracks,\n          onSave: savePlaylist,\n          playlistName: playlistName,\n          setPlaylistName: setPlaylistName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"ipxmzoaVtsa3uqFlFR8iCkSg8p4=\");\n_c = App;\n;\nexport default App;\nwindow.Spotify = Spotify;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","styles","SearchBar","SearchResults","Playlist","Tracklist","Spotify","jsxDEV","_jsxDEV","App","_s","searchResults","setSearchResults","selectedTracks","setSelectedTracks","tracks","setTracks","playlistName","setPlaylistName","playlistTracks","setPlaylistTracks","name","uri","savePlaylist","length","console","error","log","trackUris","map","track","alert","handleSelectTrack","prevSelected","isSelected","some","t","id","filter","handleSearch","query","searchTracks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","Main","onSelectTrack","onSave","_c","window","$RefreshReg$"],"sources":["C:/Users/bulei/Desktop/full stack course/Jamming/jammming/src/components/App/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styles from './App.module.css';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport SearchResults from '../SearchResults/SearchResults';\r\nimport Playlist from '../Playlist/Playlist';\r\nimport Tracklist from '../Tracklist/Tracklist';\r\nimport Spotify from '../Spotify/spotify';\r\n\r\nfunction App() {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [selectedTracks, setSelectedTracks] = useState([]);\r\n    const [tracks, setTracks] = useState([]);\r\n\r\n    const [playlistName, setPlaylistName] = useState('My New Playlist');\r\n    const [playlistTracks, setPlaylistTracks] = useState([\r\n        { name: \"Song 1\", uri: \"spotify:track:123\" },\r\n        { name: \"Song 2\", uri: \"spotify:track:456\" },\r\n        { name: \"Song 3\", uri: \"spotify:track:789\" },\r\n    ]);\r\n\r\n    const savePlaylist = async () => {\r\n        if (!selectedTracks.length) {\r\n            console.error(\"❌ No tracks in the playlist to save!\");\r\n            return;\r\n        }\r\n\r\n        console.log(\"🚀 Saving playlist:\", playlistName, selectedTracks);\r\n        const trackUris = selectedTracks.map((track) => track.uri);\r\n\r\n        try {\r\n            await Spotify.savePlaylist(playlistName, trackUris);\r\n            setSelectedTracks([]);\r\n             alert(\"✅ Playlist saved successfully!\");\r\n        } catch (error) {\r\n        console.error(\"❌ Error saving playlist:\", error);\r\n        }    \r\n    };\r\n\r\n    const handleSelectTrack = (track) => {\r\n        setSelectedTracks((prevSelected) => {\r\n            const isSelected = prevSelected.some(t => t.id === track.id);\r\n\r\n            if (isSelected) {\r\n                return prevSelected.filter(t => t.id !== track.id);\r\n            } else {\r\n                return [...prevSelected, track];\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleSearch = async (query) => {\r\n        const searchResults = await Spotify.searchTracks(query);\r\n        setTracks(searchResults);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>Jammming</h1>\r\n            <SearchBar onSearch={handleSearch}/>\r\n            <div className={styles.Main}>\r\n                <div className={styles.SearchResults}> \r\n                    <SearchResults tracks={tracks} onSelectTrack={handleSelectTrack} selectedTracks={selectedTracks}/>\r\n                </div>\r\n                <div className={styles.Playlist}>\r\n                    <Playlist selectedTracks={selectedTracks} playlistTracks={playlistTracks} onSave={savePlaylist}\r\n                    playlistName={playlistName}\r\n                    setPlaylistName={setPlaylistName}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\nwindow.Spotify = Spotify;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}