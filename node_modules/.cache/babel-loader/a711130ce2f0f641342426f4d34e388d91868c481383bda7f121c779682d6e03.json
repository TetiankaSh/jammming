{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bulei\\\\Desktop\\\\full stack course\\\\Jamming\\\\jammming\\\\src\\\\components\\\\Playlist\\\\Playlist.js\";\nimport React from 'react';\nimport styles from '../App/App.module.css';\nimport Tracklist from '../Tracklist/Tracklist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Playlist({\n  selectedTracks = [],\n  onSave,\n  playlistName = \"\",\n  playlistTracks = [],\n  setPlaylistName\n}) {\n  /* const mockPlaylist = [\r\n      { id: 1, name: \"Track 1\", artist: \"Artist 1\" },\r\n      { id: 2, name: \"Track 2\", artist: \"Artist 2\" },\r\n  ]; */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.Playlist,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.toBeSavedPlaylist,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: playlistName,\n        onChange: e => setPlaylistName(e.target.value),\n        onFocus: e => e.target.placeholder = '',\n        onBlur: e => e.target.placeholder = 'Enter your playlist name here...',\n        placeholder: \"Enter your playlist name here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedTracks.length > 0 ? selectedTracks.map(track => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [track.name, \" by \", track.artist, \" (\", track.album, \")\"]\n        }, track.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No tracks selected yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), selectedTracks.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSave,\n        children: \"Save to Spotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.savedPlaylist,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: playlistName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: playlistTracks.length > 0 ? playlistTracks.map((track, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [track.name, \" by \", track.artist, \" (\", track.album, \")\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your playlist is empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_c = Playlist;\n;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","styles","Tracklist","jsxDEV","_jsxDEV","Playlist","selectedTracks","onSave","playlistName","playlistTracks","setPlaylistName","className","children","toBeSavedPlaylist","type","value","onChange","e","target","onFocus","placeholder","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","length","map","track","name","artist","album","id","onClick","savedPlaylist","index","_c","$RefreshReg$"],"sources":["C:/Users/bulei/Desktop/full stack course/Jamming/jammming/src/components/Playlist/Playlist.js"],"sourcesContent":["import React from 'react';\r\nimport styles from '../App/App.module.css';\r\nimport Tracklist from '../Tracklist/Tracklist';\r\n\r\nfunction Playlist( {selectedTracks = [], onSave, playlistName = \"\", playlistTracks = [], setPlaylistName } ) {\r\n    /* const mockPlaylist = [\r\n        { id: 1, name: \"Track 1\", artist: \"Artist 1\" },\r\n        { id: 2, name: \"Track 2\", artist: \"Artist 2\" },\r\n    ]; */\r\n    \r\n\r\n    return (\r\n        <div className={styles.Playlist}>\r\n            <div className={styles.toBeSavedPlaylist}>\r\n                <input \r\n                    type=\"text\"\r\n                    value={playlistName}\r\n                    onChange={(e) => setPlaylistName(e.target.value)}\r\n                    onFocus={(e) => e.target.placeholder = ''}\r\n                    onBlur={(e) => e.target.placeholder = 'Enter your playlist name here...'}\r\n                    placeholder=\"Enter your playlist name here...\"\r\n                />\r\n                <ul>\r\n                    {selectedTracks.length > 0 ? (\r\n                        selectedTracks.map(track => (\r\n                            <li key={track.id}>{track.name} by {track.artist} ({track.album})</li>\r\n                        ))\r\n                    ) : (\r\n                        <p>No tracks selected yet.</p>\r\n                    )}\r\n                </ul>\r\n                {selectedTracks.length > 0 && (\r\n                    <button onClick={onSave}\r\n                            \r\n                    >Save to Spotify</button>\r\n                )}\r\n            </div>\r\n            <div className={styles.savedPlaylist}>\r\n                <h3>{playlistName}</h3>\r\n                <ul>\r\n                    {playlistTracks.length > 0 ? (\r\n                        playlistTracks.map((track, index) => (\r\n                            <li key={index}>{track.name} by {track.artist} ({track.album})</li>\r\n                        ))\r\n                    ) : (\r\n                        <p>Your playlist is empty.</p>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Playlist;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}