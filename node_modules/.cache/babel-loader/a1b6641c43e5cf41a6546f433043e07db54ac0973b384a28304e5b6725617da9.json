{"ast":null,"code":"const clientId='31cf919a0720447eafbed8e970469abe';const redirectUri=\"https://tetiankash.github.io/jammming/\";let accessToken=\"\";const Spotify={getAccessToken(){if(accessToken){console.log(\"‚úÖ Using existing access token:\",accessToken);return accessToken;}const urlParams=new URLSearchParams(window.location.hash.substring(1));const token=urlParams.get(\"access_token\");const expiresIn=urlParams.get(\"expires_in\");if(token){accessToken=token;console.log(\"üîë New access token received:\",accessToken);// Automatically remove the token after it expires\nsetTimeout(()=>accessToken=\"\",expiresIn*1000);// Remove token from URL\nwindow.history.pushState(\"Access Token\",null,\"/\");return accessToken;}else{console.log(\"üîÑ Redirecting to Spotify login...\");window.location.href=`https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;}},async savePlaylist(playlistName,trackUris){if(!playlistName||trackUris.length===0){console.error(\"‚ùå Missing playlist name or tracks\");return;}const token=Spotify.getAccessToken();if(!token){console.error(\"‚ùå No access token available\");return;}const headers={Authorization:`Bearer ${token}`,\"Content-Type\":\"application/json\"};try{// Get user ID\nconsole.log(\"üîÑ Fetching user ID...\");const userResponse=await fetch(\"https://api.spotify.com/v1/me\",{headers});if(!userResponse.ok)throw new Error(\"Failed to get user ID\");const userData=await userResponse.json();console.log(\"‚úÖ User ID:\",userData.id);// Create Playlist\nconsole.log(\"üîÑ Creating playlist...\");const playlistResponse=await fetch(`https://api.spotify.com/v1/users/${userData.id}/playlists`,{headers,method:\"POST\",body:JSON.stringify({name:playlistName})});if(!playlistResponse.ok)throw new Error(\"Failed to create playlist\");const playlistData=await playlistResponse.json();console.log(\"‚úÖ Playlist created! ID:\",playlistData.id);// Add Tracks\nconsole.log(\"üîÑ Adding tracks to playlist...\");const addTracksResponse=await fetch(`https://api.spotify.com/v1/playlists/${playlistData.id}/tracks`,{headers,method:\"POST\",body:JSON.stringify({uris:trackUris})});if(!addTracksResponse.ok)throw new Error(\"Failed to add tracks to playlist\");console.log(\"‚úÖ Tracks added successfully!\");}catch(error){console.error(\"‚ùå Error:\",error);}},async searchTracks(query){if(!query){console.error(\"‚ùå No search query provided\");return[];}const token=this.getAccessToken();if(!token){console.error(\"‚ùå No access token available\");return[];}const headers={Authorization:`Bearer ${token}`,'Content-type':'application/json'};try{console.log(`üîé Searching for \"${query}\"...`);const response=await fetch(`https://api.spotify.com/v1/search?type=track&q=${encodeURIComponent(query)}`,{headers});if(!response.ok)throw new Error(`Search failed: ${response.statusText}`);const data=await response.json();if(!data.tracks||!data.tracks.items){throw new Error(\"No tracks found in response\");}const tracks=data.tracks.items.map(track=>({id:track.id,name:track.name,artist:track.artists.map(artist=>artist.name).join(\", \"),album:track.album.name,uri:track.uri}));console.log(\"‚úÖ Search results:\",tracks);return tracks;}catch(error){console.error(\"‚ùå Search error:\",error);return[];}}};export default Spotify;","map":{"version":3,"names":["clientId","redirectUri","accessToken","Spotify","getAccessToken","console","log","urlParams","URLSearchParams","window","location","hash","substring","token","get","expiresIn","setTimeout","history","pushState","href","savePlaylist","playlistName","trackUris","length","error","headers","Authorization","userResponse","fetch","ok","Error","userData","json","id","playlistResponse","method","body","JSON","stringify","name","playlistData","addTracksResponse","uris","searchTracks","query","response","encodeURIComponent","statusText","data","tracks","items","map","track","artist","artists","join","album","uri"],"sources":["C:/Users/bulei/Desktop/full stack course/Jamming/jammming/src/components/Spotify/spotify.js"],"sourcesContent":["const clientId = '31cf919a0720447eafbed8e970469abe';\r\nconst redirectUri = \"https://tetiankash.github.io/jammming/\";\r\nlet accessToken = \"\";\r\n\r\n\r\n\r\n\r\nconst Spotify = {\r\n    getAccessToken() {\r\n        if (accessToken) {\r\n            console.log(\"‚úÖ Using existing access token:\", accessToken);\r\n            return accessToken;\r\n        }\r\n\r\n        const urlParams = new URLSearchParams(window.location.hash.substring(1));\r\n        const token = urlParams.get(\"access_token\");\r\n        const expiresIn = urlParams.get(\"expires_in\");\r\n\r\n        if (token) {\r\n            accessToken = token;\r\n            console.log(\"üîë New access token received:\", accessToken);\r\n\r\n            // Automatically remove the token after it expires\r\n            setTimeout(() => (accessToken = \"\"), expiresIn * 1000);\r\n            \r\n            // Remove token from URL\r\n            window.history.pushState(\"Access Token\", null, \"/\");\r\n            return accessToken;\r\n        } else {\r\n            console.log(\"üîÑ Redirecting to Spotify login...\");\r\n            window.location.href = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\r\n        }\r\n    },\r\n\r\n    async savePlaylist(playlistName, trackUris) {\r\n        if (!playlistName || trackUris.length === 0) {\r\n            console.error(\"‚ùå Missing playlist name or tracks\");\r\n            return;\r\n        }\r\n\r\n        const token = Spotify.getAccessToken();\r\n        if (!token) {\r\n            console.error(\"‚ùå No access token available\");\r\n            return;\r\n        }\r\n\r\n        const headers = { \r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\" \r\n        };\r\n\r\n        try {\r\n            // Get user ID\r\n            console.log(\"üîÑ Fetching user ID...\");\r\n            const userResponse = await fetch(\"https://api.spotify.com/v1/me\", { headers });\r\n            if (!userResponse.ok) throw new Error(\"Failed to get user ID\");\r\n            const userData = await userResponse.json();\r\n            console.log(\"‚úÖ User ID:\", userData.id);\r\n            \r\n            // Create Playlist\r\n            console.log(\"üîÑ Creating playlist...\");\r\n            const playlistResponse = await fetch(`https://api.spotify.com/v1/users/${userData.id}/playlists`, {\r\n                headers,\r\n                method: \"POST\",\r\n                body: JSON.stringify({ name: playlistName }),\r\n            });\r\n\r\n            if (!playlistResponse.ok) throw new Error(\"Failed to create playlist\");\r\n            const playlistData = await playlistResponse.json();\r\n            console.log(\"‚úÖ Playlist created! ID:\", playlistData.id);\r\n\r\n            // Add Tracks\r\n            console.log(\"üîÑ Adding tracks to playlist...\");\r\n            const addTracksResponse = await fetch(`https://api.spotify.com/v1/playlists/${playlistData.id}/tracks`, {\r\n                headers,\r\n                method: \"POST\",\r\n                body: JSON.stringify({ uris: trackUris }),\r\n            });\r\n\r\n            if (!addTracksResponse.ok) throw new Error(\"Failed to add tracks to playlist\");\r\n            console.log(\"‚úÖ Tracks added successfully!\");\r\n\r\n        } catch (error) {\r\n            console.error(\"‚ùå Error:\", error);\r\n        }\r\n    },\r\n\r\n    async searchTracks(query) {\r\n        if(!query) {\r\n            console.error(\"‚ùå No search query provided\");\r\n            return [];\r\n        }\r\n\r\n        const token = this.getAccessToken();\r\n        if(!token) {\r\n            console.error(\"‚ùå No access token available\");\r\n            return [];\r\n        }\r\n\r\n        const headers = {\r\n            Authorization: `Bearer ${token}`,\r\n            'Content-type': 'application/json',\r\n        };\r\n\r\n        try {\r\n            console.log(`üîé Searching for \"${query}\"...`);\r\n            const response = await fetch(`https://api.spotify.com/v1/search?type=track&q=${encodeURIComponent(query)}`, { headers });\r\n\r\n            if(!response.ok) throw new Error(`Search failed: ${response.statusText}`);\r\n\r\n            const data = await response.json();\r\n            if (!data.tracks || !data.tracks.items) {\r\n            throw new Error(\"No tracks found in response\");\r\n        }\r\n            const tracks = data.tracks.items.map(track => ({\r\n                    id: track.id,\r\n                    name: track.name,\r\n                    artist: track.artists.map(artist => artist.name).join(\", \"),\r\n                    album: track.album.name,\r\n                    uri: track.uri,\r\n                }));\r\n\r\n                console.log(\"‚úÖ Search results:\", tracks);\r\n                return tracks;\r\n        } catch(error) {\r\n            console.error(\"‚ùå Search error:\", error);\r\n            return [];\r\n        }\r\n\r\n    },\r\n};\r\n\r\nexport default Spotify;"],"mappings":"AAAA,KAAM,CAAAA,QAAQ,CAAG,kCAAkC,CACnD,KAAM,CAAAC,WAAW,CAAG,wCAAwC,CAC5D,GAAI,CAAAC,WAAW,CAAG,EAAE,CAKpB,KAAM,CAAAC,OAAO,CAAG,CACZC,cAAcA,CAAA,CAAG,CACb,GAAIF,WAAW,CAAE,CACbG,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAEJ,WAAW,CAAC,CAC1D,MAAO,CAAAA,WAAW,CACtB,CAEA,KAAM,CAAAK,SAAS,CAAG,GAAI,CAAAC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC,CACxE,KAAM,CAAAC,KAAK,CAAGN,SAAS,CAACO,GAAG,CAAC,cAAc,CAAC,CAC3C,KAAM,CAAAC,SAAS,CAAGR,SAAS,CAACO,GAAG,CAAC,YAAY,CAAC,CAE7C,GAAID,KAAK,CAAE,CACPX,WAAW,CAAGW,KAAK,CACnBR,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAEJ,WAAW,CAAC,CAEzD;AACAc,UAAU,CAAC,IAAOd,WAAW,CAAG,EAAG,CAAEa,SAAS,CAAG,IAAI,CAAC,CAEtD;AACAN,MAAM,CAACQ,OAAO,CAACC,SAAS,CAAC,cAAc,CAAE,IAAI,CAAE,GAAG,CAAC,CACnD,MAAO,CAAAhB,WAAW,CACtB,CAAC,IAAM,CACHG,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC,CACjDG,MAAM,CAACC,QAAQ,CAACS,IAAI,CAAG,oDAAoDnB,QAAQ,kEAAkEC,WAAW,EAAE,CACtK,CACJ,CAAC,CAED,KAAM,CAAAmB,YAAYA,CAACC,YAAY,CAAEC,SAAS,CAAE,CACxC,GAAI,CAACD,YAAY,EAAIC,SAAS,CAACC,MAAM,GAAK,CAAC,CAAE,CACzClB,OAAO,CAACmB,KAAK,CAAC,mCAAmC,CAAC,CAClD,OACJ,CAEA,KAAM,CAAAX,KAAK,CAAGV,OAAO,CAACC,cAAc,CAAC,CAAC,CACtC,GAAI,CAACS,KAAK,CAAE,CACRR,OAAO,CAACmB,KAAK,CAAC,6BAA6B,CAAC,CAC5C,OACJ,CAEA,KAAM,CAAAC,OAAO,CAAG,CACZC,aAAa,CAAE,UAAUb,KAAK,EAAE,CAChC,cAAc,CAAE,kBACpB,CAAC,CAED,GAAI,CACA;AACAR,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC,CACrC,KAAM,CAAAqB,YAAY,CAAG,KAAM,CAAAC,KAAK,CAAC,+BAA+B,CAAE,CAAEH,OAAQ,CAAC,CAAC,CAC9E,GAAI,CAACE,YAAY,CAACE,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuB,CAAC,CAC9D,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,YAAY,CAACK,IAAI,CAAC,CAAC,CAC1C3B,OAAO,CAACC,GAAG,CAAC,YAAY,CAAEyB,QAAQ,CAACE,EAAE,CAAC,CAEtC;AACA5B,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC,CACtC,KAAM,CAAA4B,gBAAgB,CAAG,KAAM,CAAAN,KAAK,CAAC,oCAAoCG,QAAQ,CAACE,EAAE,YAAY,CAAE,CAC9FR,OAAO,CACPU,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEC,IAAI,CAAElB,YAAa,CAAC,CAC/C,CAAC,CAAC,CAEF,GAAI,CAACa,gBAAgB,CAACL,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,2BAA2B,CAAC,CACtE,KAAM,CAAAU,YAAY,CAAG,KAAM,CAAAN,gBAAgB,CAACF,IAAI,CAAC,CAAC,CAClD3B,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAEkC,YAAY,CAACP,EAAE,CAAC,CAEvD;AACA5B,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC,CAC9C,KAAM,CAAAmC,iBAAiB,CAAG,KAAM,CAAAb,KAAK,CAAC,wCAAwCY,YAAY,CAACP,EAAE,SAAS,CAAE,CACpGR,OAAO,CACPU,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEI,IAAI,CAAEpB,SAAU,CAAC,CAC5C,CAAC,CAAC,CAEF,GAAI,CAACmB,iBAAiB,CAACZ,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,kCAAkC,CAAC,CAC9EzB,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC,CAE/C,CAAE,MAAOkB,KAAK,CAAE,CACZnB,OAAO,CAACmB,KAAK,CAAC,UAAU,CAAEA,KAAK,CAAC,CACpC,CACJ,CAAC,CAED,KAAM,CAAAmB,YAAYA,CAACC,KAAK,CAAE,CACtB,GAAG,CAACA,KAAK,CAAE,CACPvC,OAAO,CAACmB,KAAK,CAAC,4BAA4B,CAAC,CAC3C,MAAO,EAAE,CACb,CAEA,KAAM,CAAAX,KAAK,CAAG,IAAI,CAACT,cAAc,CAAC,CAAC,CACnC,GAAG,CAACS,KAAK,CAAE,CACPR,OAAO,CAACmB,KAAK,CAAC,6BAA6B,CAAC,CAC5C,MAAO,EAAE,CACb,CAEA,KAAM,CAAAC,OAAO,CAAG,CACZC,aAAa,CAAE,UAAUb,KAAK,EAAE,CAChC,cAAc,CAAE,kBACpB,CAAC,CAED,GAAI,CACAR,OAAO,CAACC,GAAG,CAAC,qBAAqBsC,KAAK,MAAM,CAAC,CAC7C,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAjB,KAAK,CAAC,kDAAkDkB,kBAAkB,CAACF,KAAK,CAAC,EAAE,CAAE,CAAEnB,OAAQ,CAAC,CAAC,CAExH,GAAG,CAACoB,QAAQ,CAAChB,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,kBAAkBe,QAAQ,CAACE,UAAU,EAAE,CAAC,CAEzE,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAH,QAAQ,CAACb,IAAI,CAAC,CAAC,CAClC,GAAI,CAACgB,IAAI,CAACC,MAAM,EAAI,CAACD,IAAI,CAACC,MAAM,CAACC,KAAK,CAAE,CACxC,KAAM,IAAI,CAAApB,KAAK,CAAC,6BAA6B,CAAC,CAClD,CACI,KAAM,CAAAmB,MAAM,CAAGD,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,GAAG,CAACC,KAAK,GAAK,CACvCnB,EAAE,CAAEmB,KAAK,CAACnB,EAAE,CACZM,IAAI,CAAEa,KAAK,CAACb,IAAI,CAChBc,MAAM,CAAED,KAAK,CAACE,OAAO,CAACH,GAAG,CAACE,MAAM,EAAIA,MAAM,CAACd,IAAI,CAAC,CAACgB,IAAI,CAAC,IAAI,CAAC,CAC3DC,KAAK,CAAEJ,KAAK,CAACI,KAAK,CAACjB,IAAI,CACvBkB,GAAG,CAAEL,KAAK,CAACK,GACf,CAAC,CAAC,CAAC,CAEHpD,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAE2C,MAAM,CAAC,CACxC,MAAO,CAAAA,MAAM,CACrB,CAAE,MAAMzB,KAAK,CAAE,CACXnB,OAAO,CAACmB,KAAK,CAAC,iBAAiB,CAAEA,KAAK,CAAC,CACvC,MAAO,EAAE,CACb,CAEJ,CACJ,CAAC,CAED,cAAe,CAAArB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}