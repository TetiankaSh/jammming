{"ast":null,"code":"import React,{useState}from'react';import styles from'./App.module.css';import SearchBar from'../SearchBar/SearchBar';import SearchResults from'../SearchResults/SearchResults';import Playlist from'../Playlist/Playlist';import Tracklist from'../Tracklist/Tracklist';import Spotify from'../Spotify/spotify';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[searchResults,setSearchResults]=useState([]);const[selectedTracks,setSelectedTracks]=useState([]);const[tracks,setTracks]=useState([]);const[playlistName,setPlaylistName]=useState('');const[playlistTracks,setPlaylistTracks]=useState([]);const savePlaylist=async()=>{if(!selectedTracks.length){console.error(\"❌ No tracks in the playlist to save!\");return;}console.log(\"🚀 Saving playlist:\",playlistName,selectedTracks);const trackUris=selectedTracks.map(track=>track.uri);try{await Spotify.savePlaylist(playlistName,trackUris);const newTracks=selectedTracks.filter(track=>!playlistTracks.some(existingTrack=>existingTrack.uri===track.uri));setPlaylistTracks(prevTracks=>{const updatedTracks=[...prevTracks,...newTracks];return updatedTracks;});setSelectedTracks([]);alert(\"✅ Playlist saved successfully!\");}catch(error){console.error(\"❌ Error saving playlist:\",error);}};const handleSelectTrack=track=>{setSelectedTracks(prevSelected=>{const isSelected=prevSelected.some(t=>t.id===track.id);if(isSelected){return prevSelected.filter(t=>t.id!==track.id);}else{return[...prevSelected,track];}});};const handleSearch=async query=>{const searchResults=await Spotify.searchTracks(query);setTracks(searchResults);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Jammming\"}),/*#__PURE__*/_jsx(SearchBar,{onSearch:handleSearch}),/*#__PURE__*/_jsxs(\"div\",{className:styles.Main,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.SearchResults,children:/*#__PURE__*/_jsx(SearchResults,{tracks:tracks,onSelectTrack:handleSelectTrack,selectedTracks:selectedTracks})}),/*#__PURE__*/_jsx(\"div\",{className:styles.Playlist,children:/*#__PURE__*/_jsx(Playlist,{selectedTracks:selectedTracks,playlistTracks:playlistTracks,onSave:savePlaylist,playlistName:playlistName,setPlaylistName:setPlaylistName})})]})]});};export default App;window.Spotify=Spotify;","map":{"version":3,"names":["React","useState","styles","SearchBar","SearchResults","Playlist","Tracklist","Spotify","jsx","_jsx","jsxs","_jsxs","App","searchResults","setSearchResults","selectedTracks","setSelectedTracks","tracks","setTracks","playlistName","setPlaylistName","playlistTracks","setPlaylistTracks","savePlaylist","length","console","error","log","trackUris","map","track","uri","newTracks","filter","some","existingTrack","prevTracks","updatedTracks","alert","handleSelectTrack","prevSelected","isSelected","t","id","handleSearch","query","searchTracks","className","children","onSearch","Main","onSelectTrack","onSave","window"],"sources":["C:/Users/bulei/Desktop/full stack course/Jamming/jammming/src/components/App/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styles from './App.module.css';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport SearchResults from '../SearchResults/SearchResults';\r\nimport Playlist from '../Playlist/Playlist';\r\nimport Tracklist from '../Tracklist/Tracklist';\r\nimport Spotify from '../Spotify/spotify';\r\n\r\nfunction App() {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [selectedTracks, setSelectedTracks] = useState([]);\r\n    const [tracks, setTracks] = useState([]);\r\n\r\n    const [playlistName, setPlaylistName] = useState('');\r\n    const [playlistTracks, setPlaylistTracks] = useState([]);\r\n\r\n    const savePlaylist = async () => {\r\n        if (!selectedTracks.length) {\r\n            console.error(\"❌ No tracks in the playlist to save!\");\r\n            return;\r\n        }\r\n\r\n        console.log(\"🚀 Saving playlist:\", playlistName, selectedTracks);\r\n        const trackUris = selectedTracks.map((track) => track.uri);\r\n\r\n        try {\r\n            await Spotify.savePlaylist(playlistName, trackUris);\r\n\r\n            const newTracks = selectedTracks.filter(\r\n                track => !playlistTracks.some(existingTrack => existingTrack.uri === track.uri)\r\n            );\r\n            setPlaylistTracks(prevTracks => {\r\n                const updatedTracks = [...prevTracks, ...newTracks];\r\n                return updatedTracks;\r\n            });\r\n\r\n            setSelectedTracks([]);\r\n            alert(\"✅ Playlist saved successfully!\");\r\n        } catch (error) {\r\n        console.error(\"❌ Error saving playlist:\", error);\r\n        }    \r\n    };\r\n\r\n    const handleSelectTrack = (track) => {\r\n        setSelectedTracks((prevSelected) => {\r\n            const isSelected = prevSelected.some(t => t.id === track.id);\r\n\r\n            if (isSelected) {\r\n                return prevSelected.filter(t => t.id !== track.id);\r\n            } else {\r\n                return [...prevSelected, track];\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleSearch = async (query) => {\r\n        const searchResults = await Spotify.searchTracks(query);\r\n        setTracks(searchResults);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>Jammming</h1>\r\n            <SearchBar onSearch={handleSearch}/>\r\n            <div className={styles.Main}>\r\n                <div className={styles.SearchResults}> \r\n                    <SearchResults tracks={tracks} onSelectTrack={handleSelectTrack} selectedTracks={selectedTracks}/>\r\n                </div>\r\n                <div className={styles.Playlist}>\r\n                    <Playlist selectedTracks={selectedTracks} playlistTracks={playlistTracks} onSave={savePlaylist}\r\n                    playlistName={playlistName}\r\n                    setPlaylistName={setPlaylistName}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\nwindow.Spotify = Spotify;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}