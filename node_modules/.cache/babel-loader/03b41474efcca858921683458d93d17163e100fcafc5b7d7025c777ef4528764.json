{"ast":null,"code":"const clientId = '31cf919a0720447eafbed8e970469abe';\nconst redirectUri = \"http://localhost:3000/\";\nlet accessToken;\nconst Spotify = {\n  getAccessToken() {\n    console.log('Getting access token...');\n    if (accessToken) {\n      console.log('Got it!');\n      return accessToken;\n    }\n    const tokenMatch = window.location.href.match(/access_token=([^&]*)/);\n    const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\n    if (tokenMatch && expiresInMatch) {\n      accessToken = tokenMatch[1];\n      const expiresIn = Number(expiresInMatch[1]);\n      window.setTimeout(() => accessToken = \"\", expiresIn * 1000);\n      window.history.pushState(\"Access Token\", null, '/');\n      return accessToken;\n    } else {\n      const authUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\n      window.location = authUrl;\n    }\n  },\n  async savePlaylist(playlistName, trackUris) {\n    if (!playlistName || trackUris.length === 0) return;\n    const token = Spotify.getAccessToken();\n    const headers = {\n      Authorization: `Bearer ${token}`\n    };\n    try {\n      const userResponse = await fetch('https://api.spotify.com/v1/me', {\n        headers\n      });\n      const userData = await userResponse.json();\n      const userId = userData.id;\n      const playlistResponse = await fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n        headers,\n        method: 'POST',\n        body: JSON.stringify({\n          name: playlistName\n        })\n      });\n      const playlistData = await playlistResponse.json();\n      const playlistId = playlistData.id;\n      await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n        headers,\n        method: 'POST',\n        body: JSON.stringify({\n          uris: trackUris\n        })\n      });\n      console.log('Playlist saved to Spotify!');\n    } catch (error) {\n      console.error('Error saving playlist: ', error);\n    }\n  }\n};\nexport default Spotify;","map":{"version":3,"names":["clientId","redirectUri","accessToken","Spotify","getAccessToken","console","log","tokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","authUrl","savePlaylist","playlistName","trackUris","length","token","headers","Authorization","userResponse","fetch","userData","json","userId","id","playlistResponse","method","body","JSON","stringify","name","playlistData","playlistId","uris","error"],"sources":["C:/Users/bulei/Desktop/full stack course/Jamming/jammming/src/components/Spotify/spotify.js"],"sourcesContent":["const clientId = '31cf919a0720447eafbed8e970469abe';\r\nconst redirectUri = \"http://localhost:3000/\";\r\nlet accessToken;\r\n\r\nconst Spotify = {\r\n    getAccessToken() {\r\n            console.log('Getting access token...');\r\n            if(accessToken) {\r\n                console.log('Got it!');\r\n                return accessToken;\r\n            }\r\n\r\n        const tokenMatch = window.location.href.match(/access_token=([^&]*)/);\r\n        const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\r\n\r\n        if (tokenMatch && expiresInMatch) {\r\n            accessToken = tokenMatch[1];\r\n            const expiresIn = Number(expiresInMatch[1]);\r\n\r\n            window.setTimeout(() => (accessToken = \"\"), expiresIn * 1000);\r\n            window.history.pushState(\"Access Token\", null, '/');\r\n\r\n            return accessToken;\r\n        } else {\r\n            const authUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\r\n            window.location = authUrl;\r\n        }\r\n    },\r\n\r\n    async savePlaylist(playlistName, trackUris) {\r\n        if(!playlistName || trackUris.length === 0) return;\r\n\r\n        const token = Spotify.getAccessToken();\r\n        const headers = { Authorization: `Bearer ${token}`};\r\n\r\n        try {\r\n            const userResponse = await fetch('https://api.spotify.com/v1/me', { headers });\r\n            const userData = await userResponse.json();\r\n            const userId = userData.id;\r\n\r\n            const playlistResponse = await fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\r\n                headers,\r\n                method: 'POST',\r\n                body: JSON.stringify({ name: playlistName }),\r\n            });\r\n\r\n            const playlistData = await playlistResponse.json();\r\n            const playlistId = playlistData.id;\r\n\r\n            await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\r\n                headers,\r\n                method: 'POST',\r\n                body: JSON.stringify({ uris: trackUris }),\r\n            });\r\n\r\n            console.log('Playlist saved to Spotify!');\r\n        } catch (error) {\r\n            console.error('Error saving playlist: ', error);\r\n        }\r\n    },\r\n};\r\n\r\nexport default Spotify;"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,kCAAkC;AACnD,MAAMC,WAAW,GAAG,wBAAwB;AAC5C,IAAIC,WAAW;AAEf,MAAMC,OAAO,GAAG;EACZC,cAAcA,CAAA,EAAG;IACTC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtC,IAAGJ,WAAW,EAAE;MACZG,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MACtB,OAAOJ,WAAW;IACtB;IAEJ,MAAMK,UAAU,GAAGC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC,sBAAsB,CAAC;IACrE,MAAMC,cAAc,GAAGJ,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC,oBAAoB,CAAC;IAEvE,IAAIJ,UAAU,IAAIK,cAAc,EAAE;MAC9BV,WAAW,GAAGK,UAAU,CAAC,CAAC,CAAC;MAC3B,MAAMM,SAAS,GAAGC,MAAM,CAACF,cAAc,CAAC,CAAC,CAAC,CAAC;MAE3CJ,MAAM,CAACO,UAAU,CAAC,MAAOb,WAAW,GAAG,EAAG,EAAEW,SAAS,GAAG,IAAI,CAAC;MAC7DL,MAAM,CAACQ,OAAO,CAACC,SAAS,CAAC,cAAc,EAAE,IAAI,EAAE,GAAG,CAAC;MAEnD,OAAOf,WAAW;IACtB,CAAC,MAAM;MACH,MAAMgB,OAAO,GAAG,oDAAoDlB,QAAQ,kEAAkEC,WAAW,EAAE;MAC3JO,MAAM,CAACC,QAAQ,GAAGS,OAAO;IAC7B;EACJ,CAAC;EAED,MAAMC,YAAYA,CAACC,YAAY,EAAEC,SAAS,EAAE;IACxC,IAAG,CAACD,YAAY,IAAIC,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE;IAE5C,MAAMC,KAAK,GAAGpB,OAAO,CAACC,cAAc,CAAC,CAAC;IACtC,MAAMoB,OAAO,GAAG;MAAEC,aAAa,EAAE,UAAUF,KAAK;IAAE,CAAC;IAEnD,IAAI;MACA,MAAMG,YAAY,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QAAEH;MAAQ,CAAC,CAAC;MAC9E,MAAMI,QAAQ,GAAG,MAAMF,YAAY,CAACG,IAAI,CAAC,CAAC;MAC1C,MAAMC,MAAM,GAAGF,QAAQ,CAACG,EAAE;MAE1B,MAAMC,gBAAgB,GAAG,MAAML,KAAK,CAAC,oCAAoCG,MAAM,YAAY,EAAE;QACzFN,OAAO;QACPS,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,IAAI,EAAEjB;QAAa,CAAC;MAC/C,CAAC,CAAC;MAEF,MAAMkB,YAAY,GAAG,MAAMN,gBAAgB,CAACH,IAAI,CAAC,CAAC;MAClD,MAAMU,UAAU,GAAGD,YAAY,CAACP,EAAE;MAElC,MAAMJ,KAAK,CAAC,wCAAwCY,UAAU,SAAS,EAAE;QACrEf,OAAO;QACPS,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEI,IAAI,EAAEnB;QAAU,CAAC;MAC5C,CAAC,CAAC;MAEFhB,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAC7C,CAAC,CAAC,OAAOmC,KAAK,EAAE;MACZpC,OAAO,CAACoC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACnD;EACJ;AACJ,CAAC;AAED,eAAetC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}